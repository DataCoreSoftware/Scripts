#!/bin/bash
# Author: DataCore Software
#
# This script is about helping multipath diagnose with DataCore SSY vDisks
#   it will add FrontEnd info infront of Lun targets
#   coupled with SSY RestAPI it could also add the SSY vDisk name to the Multipath
#
#############################################################


ERR=0
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# SSY connection by RESTAPI

if [ -f /etc/pve/storage.cfg ] ; then

  if [ $(whereis jq|wc -w) -le 1 ] ; then
    printf "${RED}JQ package is mandatory to gather data from SSY, please install the package using ${YELLOW}apt install jq${NC}\n"
    VDISKS=""
  else
    PVECONF=$(cat /etc/pve/storage.cfg |grep -m1 -A5 ssy:)
    SERVERHOST=$(printf "$PVECONF" |awk '/SSYipAddress/ {print $2}'|sed "s/,/ /g")
    SSYUSER=$(printf "$PVECONF" |awk '/SSYusername/ {print $2}')
    SSYPWD=$(printf "$PVECONF" |awk '/SSYpassword/ {print $2}')
    for SSYHOST in $SERVERHOST
    do
    VDISKS=$(curl -s -m 1 -k -L -H "ServerHost: ${SSYHOST}" -u${SSYUSER}:${SSYPWD} https://${SSYHOST}/RestService/rest.svc/1.0/virtualdisks)
    if [[ "$VDISKS" != "" ]] ; then
        if ! [ $(echo $VDISKS|jq -e 'try(.ErrorsCode)') ]; then
            ERR=1
            break
        fi
    fi
    done
    if [ $(echo $ERR) -ne 1 ]; then
      VDISKS=""
      printf "${RED}Unable to gather data from SSY, please review if the SSY storage class is added or not. ${NC}\n"
    fi
  fi
else
  VDISKS=""
fi
# echo "SSY node: $SSYHOST"

multipath -r
sleep 2
TMP_LL=$(mktemp /tmp/multipath.ll.XXXXXX)
TMP_V3=$(mktemp /tmp/multipath.v3.XXXXXX)

multipath -ll > "$TMP_LL"
multipath -v3 &> "$TMP_V3"

DEVICES=$(cat "$TMP_V3" | awk -F"\||:"  '/\| sd/ {print $2}' |sort -u)


while IFS= read -r LINE; do
  VDISK=""
  if [ $(echo ${LINE} | grep -c "${DEVICES[*]}") -eq 0  ]; then
    if [ $(echo ${LINE} | grep -c "DataCore,Virtual Disk") -eq 1 ]; then
       NAA=$(echo ${LINE} | awk -F'[()]' '{print substr($2,2)}' | tr '[:lower:]' '[:upper:]')
       if [[ $VDISKS ]] ; then VDISK=$(echo ${VDISKS}|jq --arg name $NAA -r '.[] | select(.ScsiDeviceIdString == $name) | .Alias') ; fi
    fi
    if [[ $VDISK ]] ; then printf "\n${YELLOW}[${VDISK}]${NC} ${LINE} ${YELLOW}[${VDISK}]${NC}\n"
    else
      if [ $(echo "${LINE}" | grep -c "status=active") -eq 1 ]; then GREEN='\033[1;32m'; fi
      if [ $(echo "${LINE}" | grep -c "status=enabled") -eq 1 ]; then GREEN='\033[1;34m'; fi
      echo "${LINE}"
    fi
  else
    DEVICE=$(echo "$LINE" | awk -F"[0-9]+\:[0-9]+\:[0-9]+\:[0-9]" '{print $2}'|awk '{print $1}')
    PORTAL=$(cat "$TMP_V3" |awk -F"\| " '{print $2}'| awk '/'$DEVICE': tgt_node_name/ {print $0}'|awk -F":" '{print $3}'|sort -u)
    if [ $(echo "${LINE}" | grep -c "faulty") -eq 0 ]; then
      printf "${GREEN}${LINE} ${YELLOW}($PORTAL)${NC}\n"
    else
      printf "${RED}${LINE} ${YELLOW}($PORTAL)${NC}\n"
    fi
  fi
done < "$TMP_LL"

rm -f "$TMP_LL" "$TMP_V3"